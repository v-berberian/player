{"version":3,"sources":["components/Player.js","components/Song.js","tracks.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setCurrentSong","setIsPlaying","isPlaying","audioRef","songs","setSongs","useEffect","map","targetSong","active","id","iOSPlayback","current","play","then","audio","useState","currentTime","duration","songInfo","setSongInfo","timeUpdateHandler","e","target","getTime","time","Math","floor","slice","skip","direction","newIndex","findIndex","s","length","className","type","min","max","value","onChange","size","icon","faStepBackward","onClick","faPause","faPlay","pause","faStepForward","onLoadedData","console","log","onLoadedMetadata","onTimeUpdate","ref","src","Song","cover","alt","name","artist","chillHop","color","uuidv4","LibrarySong","song","darkMode","Library","libraryStatus","setLibraryStatus","libraryRef","setDarkMode","useRef","handler","contains","document","addEventListener","removeEventListener","Nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.062edaa0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faStepForward,\n  faStepBackward,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  setCurrentSong,\n  setIsPlaying,\n  isPlaying,\n  audioRef,\n  songs,\n  setSongs,\n}) => {\n  useEffect(() => {\n    setSongs(\n      songs.map((targetSong) => {\n        return {\n          ...targetSong,\n          active: targetSong.id === currentSong.id,\n        }\n      })\n    )\n    \n  }, [currentSong]);\n  \n  //Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n      console.log(\"now playing\")\n    }\n  };\n\n  const iOSPlayback = () => {\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      playPromise.then((audio) => {\n        audioRef.current.play();\n      });\n    }\n  }\n\n  //States\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  \n\n  function skip(direction) {\n    // -1 or 1\n    const currentIndex = songs.findIndex((s) => s.id === currentSong.id);\n    let newIndex = currentIndex + direction;\n    \n    if (newIndex < 0) {\n      newIndex = songs.length - 1;\n      \n    } else if (newIndex >= songs.length) {\n      newIndex = 0;\n    }\n    setCurrentSong(songs[newIndex]);\n\n  }\n\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={songInfo.duration || 0}\n          value={songInfo.currentTime}\n          onChange={dragHandler}\n        />\n        <p>{getTime(songInfo.duration || 0)}</p>\n      </div>\n\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faStepBackward}\n          onClick={() => {skip(-1); iOSPlayback()}}\n        />\n        <FontAwesomeIcon\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n          onClick={playSongHandler}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faStepForward}\n          onClick={() => {skip(1); iOSPlayback()}}\n        />\n      </div>\n      <audio\n        onLoadedData={autoPlayHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      />\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nexport const Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name} />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setSongs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  darkMode\n}) => {\n  const updatedSongs = () => {\n    setSongs(\n      songs.map((targetSong) => {\n        return {\n          ...targetSong,\n          active: targetSong.id === song.id,\n        };\n      })\n    );\n  };\n\n  const songSelectHandler = () => {\n    setCurrentSong(song);\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      playPromise.then((audio) => {\n        audioRef.current.play();\n      });\n    }\n  };\n\n  const handleTheme = () => {\nreturn \"selected\"\n  }\n\n  return (\n    <div\n      className={`${darkMode ? \"library-song-dark-mode\":\"library-song\"} ${song.active && !darkMode ? \"selected\" : song.active && darkMode ? \"dark-mode-selection\":\"\"}`}\n      onClick={() => {\n        songSelectHandler();\n        updatedSongs();\n      }}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React, { useEffect, useRef } from \"react\";\n\nimport LibrarySong from \"./LibrarySong\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  setSongs,\n  audioRef,\n  isPlaying,\n  libraryStatus,\n  setLibraryStatus,\n  darkMode,\n  setDarkMode,\n}) => {\n  let libraryRef = useRef();\n\n  useEffect(() => {\n    let handler = (e) => {\n      if (!libraryRef.current.contains(e.target)) {\n        setLibraryStatus(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n    };\n  });\n\n  return (\n    <div\n      ref={libraryRef}\n      className={`library ${libraryStatus ? \"visible\" : \"\"}  ${darkMode ? \"dark-background\": \"light-background\"} `}\n    >\n      <div className={`library-header ${darkMode ? \"dark-background\": \"light-background\"}`}>\n        <h2>up next</h2>\n        <CloseIcon\n        className=\"close-window\"\n        onClick={() => setLibraryStatus(false)}/>\n        {/* <FontAwesomeIcon\n          className=\"close-window\"\n          size=\"2x\"\n          icon={faTimes}\n          onClick={() => setLibraryStatus(false)}\n        /> */}\n        \n      </div>\n\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            setSongs={setSongs}\n            song={song}\n            key={song.id}\n            setCurrentSong={setCurrentSong}\n            songs={songs}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            darkMode={darkMode}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n\n// return (\n//   <Transition in={libraryStatus} timeout={300}>\n//     {(state) => {\n//       console.log(state);\n//       return (\n//         <div\n//           className=\"library\"\n//           style={{\n//             ...defaultStyle,\n//             ...transitionStyles[state],\n//           }}\n//         >\n//           <div className=\"library-header\">\n//             <h2>Library</h2>\n//             <FontAwesomeIcon\n//               className=\"close-window\"\n//               size=\"2x\"\n//               icon={faTimes}\n//               onClick={() => setLibraryStatus(!libraryStatus)}\n//             />\n//           </div>\n\n//           <div className=\"library-songs\">\n//             {songs.map((song) => (\n//               <LibrarySong\n//                 setSongs={setSongs}\n//                 song={song}\n//                 key={song.id}\n//                 setCurrentSong={setCurrentSong}\n//                 songs={songs}\n//                 audioRef={audioRef}\n//                 isPlaying={isPlaying}\n//               />\n//             ))}\n//           </div>\n//         </div>\n//       );\n//     }}\n//   </Transition>\n// );\n// };\n","import React from \"react\";\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\n\nconst Nav = ({ libraryStatus, setLibraryStatus, darkMode, setDarkMode }) => {\n  // console.log(darkMode)\n  return (\n    <nav>\n      <div className=\"icon-wrapper\">\n      <NightsStayIcon className=\"dark-mode\" onClick={()=> setDarkMode(!darkMode) } />\n      </div>\n      <h3 className=\"up-next\" onClick={() => setLibraryStatus(true)}>\n        Up Next\n      </h3>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useState, useRef } from \"react\";\n\nimport \"../src/styles/app.scss\";\n\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport chillHop from \"./tracks\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [songs, setSongs] = useState(chillHop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [darkMode, setDarkMode] = useState(false)\n\n  const audioRef = useRef(null);\n\n\n  return (\n    <div className={`App ${darkMode ? \"dark-background\": \"light-background\"}`}>\n      <Nav darkMode={darkMode} setDarkMode={setDarkMode} setLibraryStatus={(libraryStatus, setLibraryStatus)} />\n      <div className=\"main\">\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      </div>\n      <Library\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        darkMode={darkMode} \n        setDarkMode={setDarkMode}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}